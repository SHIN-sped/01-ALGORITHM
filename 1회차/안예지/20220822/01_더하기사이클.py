# 1110
"""
0보다 크거나 같고, 99보다 작거나 같은 정수가 주어질 때 다음과 같은 연산을 할 수 있다.
26부터 시작한다. 2+6 = 8이다. 새로운 수는 68이다. 
6+8 = 14이다. 새로운 수는 84이다. 8+4 = 12이다. 새로운 수는 42이다. 
4+2 = 6이다. 새로운 수는 26이다.
위의 예는 4번 만에 원래 수로 돌아올 수 있다.
N이 주어졌을 때, N의 사이클의 길이를 구하는 프로그램을 작성

# 입력
N은 0보다 크거나 같고, 99보다 작거나 같은 정수이다.

# 출력
첫째 줄에 N의 사이클 길이 출력

# 접근 방법
1. 입력값은 두 자리 수이므로 각 자리를 10으로 나눠서 10의 자리와 1의 자리 수를 얻을 수 있다.
2. 일의 자리에 10을 곱하면 새로운 수의 10의 자리가 된다.
3. 새로운 수가 발생할 때마다 사이클을 추가한다.
"""

N = int(input())
N1 = N
# 사이클의 길이를 저장할 변수
cycle = 0
while True:
    # 10으로 나눠 10의자리와 1의 자리수 얻기
    # 한 자리 수일 경우 앞 자리게 붙는 0은 새로운 수에 영향을 주지 않으므로 그대로 진행
    new_num = (N // 10) + (N % 10)
    new_ten = (N % 10) * 10
    new_one = new_num % 10
    # 새로운 수로 N을 갱신
    N = new_ten + new_one
    cycle += 1
    
    if N == N1:
        print(cycle)
        break