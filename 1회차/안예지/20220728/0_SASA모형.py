# 23825.
"""
 SASA 모형 1개를 만들기 위해서는, 알파벳 S 모양의 블록 2개와
 알파벳 A모양의 블록 2개가 필요하다. 만들 수 있는 SASA모형 개수의 최댓값 구하라.
 
 # 입력
 첫째 줄에 알파벳 S 모양의 블록의 개수 N과 
 알파벳 A 모양의 블록의 개수 M이 
 공백으로 구분되어 주어진다.
 
 # 출력
 SASA 모형 개수의 최댓값을 출력
 
 # 접근
 1. S랑 A가 짝수일 때 SASA가 생성되므로
 2. S랑 A중 개수를 더 적게 받아온 글자를 기준으로,
 3. 나머지가 1이 될때까지 반복한 횟수를 구해보자.
 => 틀렸음.
 
 1. S랑 A중 개수를 더 적게 받아온 글자를 기준으로,
 2. 2개마다 SASA가 생기니까 SASA의 개수는 2를 나눈 몫과 같다.

"""
# 알파벳 개수를 받아온다
# num_list = list(map(int, input().split()))
N, M =map(int, input().split())
chr = min(N, M)
# 더 적게 받아온 알파벳의 개수를 저장한다.
# chr = min(num_list)
# sasa = 0
# # 짝수가 등장한다면 sasa 하나가 추가된다.
# for i in range(chr):
#     if i%2 == 0:
#         sasa += 1
# print(sasa)

# 최소값을 2로 나눈 몫을 출력한다.
print(chr//2)