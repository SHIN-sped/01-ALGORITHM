# 동호는 내년에 초등학교를 입학한다. 그래서 동호 어머니는 수학 선행 학습을 위해 쉽게 푸는 문제를 동호에게 주었다.
# 이 문제는 다음과 같다. 1을 한 번, 2를 두 번, 3을 세 번, 이런 식으로 1 2 2 3 3 3 4 4 4 4 5 .. 
# 이러한 수열을 만들고 어느 일정한 구간을 주면 그 구간의 합을 구하는 것이다.
# 하지만 동호는 현재 더 어려운 문제를 푸느라 바쁘기에 우리가 동호를 도와주자.
# 입력
# 첫째 줄에 구간의 시작과 끝을 나타내는 정수 A, B(1 ≤ A ≤ B ≤ 1,000)가 주어진다.
# 즉, 수열에서 A번째 숫자부터 B번째 숫자까지 합을 구하면 된다.
# 출력
# 첫 줄에 구간에 속하는 숫자의 합을 출력한다.

a, b =map(int,input().split()) #시작과 끝의수 a,b 입력받음  a, b(1 ≤ a ≤ b ≤ 1,000)
#수열만들기
ab = []
cnt = 0
while True:
    cnt += 1 #널을 숫자
    cnt_ = cnt #숫자 카운팅 횟수/ 값이 늘아나게 시작하면서 카운팅할때 1씩 감소하게 제작
    while cnt_ > 0:
        ab.append(cnt)
        cnt_ -= 1
    if len(ab) > 1000:
        break
print(ab)
sum_ = 0
for i in range(a-1,b): #인덱스와 내가 입력한 값의 차이1이난다.
    sum_ += ab[i]

print('resule: ',sum_ )