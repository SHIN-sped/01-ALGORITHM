# 상근이는 자전거를 타고 등교한다. 자전거 길은 오르막길, 내리막길, 평지로 이루어져 있다. 상근이는 개강 첫 날 자전거를 타고 가면서 일정 거리마다 높이를 측정했다. 

# 상근이는 가장 큰 오르막길의 크기를 구하려고 한다.

# 측정한 높이는 길이가 N인 수열로 나타낼 수 있다. 여기서 오르막길은 적어도 2개의 수로 이루어진 높이가 증가하는 부분 수열이다. 오르막길의 크기는 부분 수열의 첫 번째 숫자와 마지막 숫자의 차이이다.

# 예를 들어, 높이가 다음과 같은 길이 있다고 하자. 12 3 5 7 10 6 1 11. 이 길에는 2 개의 오르막길이 있다. 밑 줄로 표시된 부분 수열이 오르막길이다. 

# 첫 번째 오르막길의 크기는 7이고, 두 번째 오르막길의 크기는 10이다. 높이가 12와 6인 곳은 오르막길에 속하지 않는다.

# 가장 큰 오르막길을 구하는 프로그램을 작성하시오.


# N : 리스트 길이
N = int(input())

# 높이 리스트 입력
list_ = list(map(int,input().split()))

# 누적합 저장 변수
sum_ = 0

# 가장 긴 오르막길 길이를 저장할 변수
max_sum = 0


# 오르막길을 찾기 위해서 인덱싱
for i in range(1, len(list_)):
    # 오르막길은 현재 값 > 이전 값
    if list_[i] > list_[i-1]: 
        # 오르막길의 전체 길이 = 부분 오르막길들의 길이의 누적합
        sum_ = sum_ + list_[i] - list_[i-1] # 누적합

        # 기존의 가장 긴 길이와 현재 길이를 비교해서
        # 긴 길이를 저장합니다.
        max_sum = max(max_sum, sum_) 


    # 오르막길이 아니면
    else:
        # 평지, 내리막길을 만나면 누적합을 0으로 초기화합니다.
        sum_ = 0
 
print(max_sum)
