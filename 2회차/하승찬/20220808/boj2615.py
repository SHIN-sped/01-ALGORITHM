# 오목은 바둑판에 검은 바둑알과 흰 바둑알을 교대로 놓아서 겨루는 게임이다. 바둑판에는 19개의 가로줄과 19개의 세로줄이 그려져 있는데 가로줄은 위에서부터 아래로 1번, 2번, ... ,19번의 번호가 붙고 세로줄은 왼쪽에서부터 오른쪽으로 1번, 2번, ... 19번의 번호가 붙는다.



# 위의 그림에서와 같이 같은 색의 바둑알이 연속적으로 다섯 알을 놓이면 그 색이 이기게 된다. 여기서 연속적이란 가로, 세로 또는 대각선 방향 모두를 뜻한다. 즉, 위의 그림은 검은색이 이긴 경우이다. 하지만 여섯 알 이상이 연속적으로 놓인 경우에는 이긴 것이 아니다.

# 입력으로 바둑판의 어떤 상태가 주어졌을 때, 검은색이 이겼는지, 흰색이 이겼는지 또는 아직 승부가 결정되지 않았는지를 판단하는 프로그램을 작성하시오. 단, 검은색과 흰색이 동시에 이기거나 검은색 또는 흰색이 두 군데 이상에서 동시에 이기는 경우는 입력으로 들어오지 않는다.








# baduk= [
# [0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,1,1,1,1],
# [1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
# [0,0,1,0,0,2,2,2,1,0,0,0,0,0,0,0,0,0,0],
# [1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
# [1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
# [0,0,0,0,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0],
# [0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
# [0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],
# [0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
# [0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
# [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
# [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
# [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
# [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
# [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
# [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
# [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
# [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
# [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1]
# ]


nm= 19

baduk = [list(map(int,input().split())) for __ in range(nm)]


first=[] # 이길시 최초로 시작된 승리 돌의 위치

g1=[(-2,-2),(-1,-1),(0,0),(1,1),(2,2),(-3,-3),(3,3) ]  #왼쪽 시작 대각선 좌표 ,,(3,3)
g2=[(-2,2),(-1,1),(0,0),(1,-1),(2,-2),(-3,3),(3,-3)]  #오른쪽 시작 대각선 좌표 (-3,3) ,(3,-3)

def five(y,x):  
    win=0
    for i in range(y-2,y+3): # 가로탐색 
        b= 0
        w= 0
        for j in range(x-2,x+3):# x-3값 x +4값 확인
            if 0<=i<=nm-1 and 0<=j<=nm-1: # 범위를 벗어나지 않기 위해 좌표의 합이 0과 19일 때 IF문 진행
                if baduk[i][j] == 1: # 좌표가 1일 때 B가 나오면 백돌 점수 B에 1씩 추가 , 반대로 W는 0으로 초기화
                    b+= 1 
                    w=0
                elif baduk[i][j]==2:
                    w+= 1
                    b=0

                if b == 5:
                    if 0<= x-3 <=nm-1 : 
                        if baduk[i][x-3] == 1:
                            b+=1
                    if 0<= x+3 <=nm-1 :
                        if baduk[i][x+3] == 1:
                            b+=1
                        # for문이 가로를 순회하며 다 돌았을 때 백돌이나 흑돌이  5번이 나온다면  win 변수 값에 흑돌이 이겼을시 1 백돌이 이길 시 2로 할당
                    if b==5:
                        first.append((i,x-2))
                       
                    
                elif w == 5:
                    if 0<= x-3 <=nm-1 : 
                        if baduk[i][x-3] == 2:
                            w+=1
                    if 0<= x+3 <=nm-1 :
                        if baduk[i][x+3] == 2:
                            w+=1
                    if w==5 :
                        first.append((i,x-2))    
                        # print(y,x)    
                        # print(baduk[y][x])
                        # print(i,j)
        if b ==5:       # for문이 가로를 순회하며 다 돌았을 때 백돌이나 흑돌이  5번이 나온다면  win 변수 값에 흑돌이 이겼을시 1 백돌이 이길 시 2로 할당
            win = 1
        elif w == 5:
            win = 2 
    for j in range(x-2,x+3): # 세로 탐색 
        b= 0
        w= 0
        for i in range(y-2,y+3): #y-3값 y+4 값 확인
            if 0<=i<=nm-1 and 0<=j<=nm-1:
                if baduk[i][j] == 1:
                    b+= 1 
                    w=0
                elif baduk[i][j]==2:
                    w+= 1
                    b=0
                if b ==5:
                    if 0<= y-3 <= nm-1 : 
                        if baduk[y-3][j] == 1:
                            b+=1
                    if 0<= y+3 <= nm-1 :
                        if baduk[y+3][j] == 1:
                            b+=1     # for문이 가로를 순회하며 다 돌았을 때 백돌이나 흑돌이  5번이 나온다면  win 변수 값에 흑돌이 이겼을시 1 백돌이 이길 시 2로 할당
                    if b == 5:
                        first.append((y-2,j))
                elif w == 5:
                    if 0<= y-3 <=nm-1 : 
                        if baduk[y-3][j] == 2:
                            w+=1
                    if 0<= y+3 <=nm-1 :
                        if baduk[y+3][j] == 2:
                            w+=1     
                    if w ==5 :
                        first.append((y-2,j))
        if b == 5:
            win = 1
        elif w == 5:
            win = 2 
    b= 0
    w= 0

    for k in range(5):
        if 0<=y+g1[k][0]<=nm-1 and 0<=x+g1[k][1]<=nm-1: # 대각선의 좌표를 튜플로 묶어서 각 인덱스 마다 더해줘서 대각선만 진행되도록 만듬 
                if baduk[y+g1[k][0]][x+g1[k][1]] == 1:
                    b+= 1 
                    w=0
                elif baduk[y+g1[k][0]][x+g1[k][1]] == 2:
                    w+= 1
                    b=0
        if b == 5:
            if 0<=y+g1[6][0]<=nm-1 and 0<=x+g1[6][1]<=nm-1:
                if baduk[y+g1[6][0]][x+g1[6][1]] ==1:
                    b+= 1
            if 0<=y+g1[5][0]<=nm-1 and 0<=x+g1[5][1]<=nm-1:
                if baduk[y+g1[5][0]][x+g1[5][1]] ==1:
                    b+= 1
            if b== 5:
                win = 1
                first.append(( y+g1[0][0],x+g1[0][1]))
            
        elif w == 5:
            if 0<=y+g1[6][0]<=nm-1 and 0<=x+g1[6][1]<=nm-1:
                if baduk[y+g1[6][0]][x+g1[6][1]] ==2:
                    w+= 1
            if 0<=y+g1[5][0]<=nm-1 and 0<=x+g1[5][1]<=nm-1:
                if baduk[y+g1[5][0]][x+g1[5][1]] ==2:
                    w+=1
            if w ==5 :
                win = 2 
                first.append((y+g1[4][0],x+g1[4][1]))
            
    b= 0
    w= 0
    for k in range(5):
        if 0<=y+g2[k][0]<=nm-1 and 0<=x+g2[k][1]<=nm-1:
                if baduk[y+g2[k][0]][x+g2[k][1]] == 1:
                    b+= 1 
                    w=0
                elif baduk[y+g2[k][0]][x+g2[k][1]] == 2:
                    w+= 1
                    b=0
        if b == 5:
            if 0<=y+g2[6][0]<=nm-1 and 0<=x+g2[6][1]<=nm-1:
                if baduk[y+g2[6][0]][x+g2[6][1]] ==1:
                    b+= 1
            if 0<=y+g2[5][0]<=nm-1 and 0<=x+g2[5][1]<=nm-1:
                if baduk[y+g2[5][0]][x+g2[5][1]] ==1:
                    b+= 1
            if  b == 5 :  
                win = 1
                first.append((y+g2[4][0],x+g2[4][1]))
        elif w == 5:
            if 0<=y+g2[6][0]<=nm-1 and 0<=x+g2[6][1]<=nm-1:
                if baduk[y+g2[6][0]][x+g2[6][1]] ==2:
                    w+= 1
            if 0<=y+g2[5][0]<=nm-1 and 0<=x+g2[5][1]<=nm-1:
                if baduk[y+g2[5][0]][x+g2[5][1]] ==2:
                    w+=1
            if w ==5 :
                win = 2 
                first.append((y+g2[4][0],x+g2[4][1]))
    return win






for y in range(nm):
    for x in range(nm):
        if baduk[y][x]== 1 or baduk[y][x]==2:  # 매트릭스의 모든 좌표를 순회
            r= five(y,x)    #1 이나 2일 시 FIVE 함수를 실행 
            if r ==1 or r ==2 :
                print(r)
                print(first[0][0]+1,first[0][1]+1)
                exit(0) # 백돌이나 흑돌이 승리 할시  승리한 돌을 출력한 후 정상종료

print(0)










